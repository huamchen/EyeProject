//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v2.0.50727.5485
//


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpBinding_IEyeWebService", Namespace = "http://tempuri.org/")]
public partial class BasicHttpBinding_IEyeWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback SetProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserIdOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserTypeIdOperationCompleted;

    private System.Threading.SendOrPostCallback ListChildrenProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetPatientProfileOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllProviderProfileOperationCompleted;

    private System.Threading.SendOrPostCallback SetChildProfileOperationCompleted;

    private System.Threading.SendOrPostCallback ListPatientsProfileOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetParentProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetProviderProfileOperationCompleted;

    private System.Threading.SendOrPostCallback CreateUpdateTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback CreateUpdateGameOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllGamesForTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteGameOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback ListGameScoresForPatientOperationCompleted;

    private System.Threading.SendOrPostCallback ListGameAssignmentOperationCompleted;

    private System.Threading.SendOrPostCallback SetGameScoresForPatientOperationCompleted;

    private System.Threading.SendOrPostCallback SetGameAssignmentOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteGameAssignmentOperationCompleted;

    /// <remarks/>
    public BasicHttpBinding_IEyeWebService()
    {
        this.Url = "http://eyeplatform.azurewebsites.net/EyeWebService.svc";
    }

    /// <remarks/>
    public event SetProfileCompletedEventHandler SetProfileCompleted;

    /// <remarks/>
    public event GetUserIdCompletedEventHandler GetUserIdCompleted;

    /// <remarks/>
    public event GetUserTypeIdCompletedEventHandler GetUserTypeIdCompleted;

    /// <remarks/>
    public event ListChildrenProfileCompletedEventHandler ListChildrenProfileCompleted;

    /// <remarks/>
    public event GetPatientProfileCompletedEventHandler GetPatientProfileCompleted;

    /// <remarks/>
    public event ListAllProviderProfileCompletedEventHandler ListAllProviderProfileCompleted;

    /// <remarks/>
    public event SetChildProfileCompletedEventHandler SetChildProfileCompleted;

    /// <remarks/>
    public event ListPatientsProfileCompletedEventHandler ListPatientsProfileCompleted;

    /// <remarks/>
    public event DeleteProfileCompletedEventHandler DeleteProfileCompleted;

    /// <remarks/>
    public event GetUserProfileCompletedEventHandler GetUserProfileCompleted;

    /// <remarks/>
    public event GetParentProfileCompletedEventHandler GetParentProfileCompleted;

    /// <remarks/>
    public event GetProviderProfileCompletedEventHandler GetProviderProfileCompleted;

    /// <remarks/>
    public event CreateUpdateTherapyCompletedEventHandler CreateUpdateTherapyCompleted;

    /// <remarks/>
    public event CreateUpdateGameCompletedEventHandler CreateUpdateGameCompleted;

    /// <remarks/>
    public event ListAllTherapyCompletedEventHandler ListAllTherapyCompleted;

    /// <remarks/>
    public event ListAllGamesForTherapyCompletedEventHandler ListAllGamesForTherapyCompleted;

    /// <remarks/>
    public event DeleteGameCompletedEventHandler DeleteGameCompleted;

    /// <remarks/>
    public event DeleteTherapyCompletedEventHandler DeleteTherapyCompleted;

    /// <remarks/>
    public event ListGameScoresForPatientCompletedEventHandler ListGameScoresForPatientCompleted;

    /// <remarks/>
    public event ListGameAssignmentCompletedEventHandler ListGameAssignmentCompleted;

    /// <remarks/>
    public event SetGameScoresForPatientCompletedEventHandler SetGameScoresForPatientCompleted;

    /// <remarks/>
    public event SetGameAssignmentCompletedEventHandler SetGameAssignmentCompleted;

    /// <remarks/>
    public event DeleteGameAssignmentCompletedEventHandler DeleteGameAssignmentCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetProfile([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] user newUser, out bool SetProfileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SetProfileResultSpecified)
    {
        object[] results = this.Invoke("SetProfile", new object[] {
                    newUser});
        SetProfileResult = ((bool)(results[0]));
        SetProfileResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void SetProfileAsync(user newUser)
    {
        this.SetProfileAsync(newUser, null);
    }

    /// <remarks/>
    public void SetProfileAsync(user newUser, object userState)
    {
        if ((this.SetProfileOperationCompleted == null))
        {
            this.SetProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProfileOperationCompleted);
        }
        this.InvokeAsync("SetProfile", new object[] {
                    newUser}, this.SetProfileOperationCompleted, userState);
    }

    private void OnSetProfileOperationCompleted(object arg)
    {
        if ((this.SetProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetProfileCompleted(this, new SetProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void GetUserId([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string loginId, out int GetUserIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserIdResultSpecified)
    {
        object[] results = this.Invoke("GetUserId", new object[] {
                    loginId});
        GetUserIdResult = ((int)(results[0]));
        GetUserIdResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void GetUserIdAsync(string loginId)
    {
        this.GetUserIdAsync(loginId, null);
    }

    /// <remarks/>
    public void GetUserIdAsync(string loginId, object userState)
    {
        if ((this.GetUserIdOperationCompleted == null))
        {
            this.GetUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdOperationCompleted);
        }
        this.InvokeAsync("GetUserId", new object[] {
                    loginId}, this.GetUserIdOperationCompleted, userState);
    }

    private void OnGetUserIdOperationCompleted(object arg)
    {
        if ((this.GetUserIdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserIdCompleted(this, new GetUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserTypeId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void GetUserTypeId(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, out int GetUserTypeIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserTypeIdResultSpecified)
    {
        object[] results = this.Invoke("GetUserTypeId", new object[] {
                    userId,
                    userIdSpecified});
        GetUserTypeIdResult = ((int)(results[0]));
        GetUserTypeIdResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void GetUserTypeIdAsync(int userId, bool userIdSpecified)
    {
        this.GetUserTypeIdAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void GetUserTypeIdAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.GetUserTypeIdOperationCompleted == null))
        {
            this.GetUserTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeIdOperationCompleted);
        }
        this.InvokeAsync("GetUserTypeId", new object[] {
                    userId,
                    userIdSpecified}, this.GetUserTypeIdOperationCompleted, userState);
    }

    private void OnGetUserTypeIdOperationCompleted(object arg)
    {
        if ((this.GetUserTypeIdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserTypeIdCompleted(this, new GetUserTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListChildrenProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Patient[] ListChildrenProfile(int parentId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool parentIdSpecified)
    {
        object[] results = this.Invoke("ListChildrenProfile", new object[] {
                    parentId,
                    parentIdSpecified});
        return ((Patient[])(results[0]));
    }

    /// <remarks/>
    public void ListChildrenProfileAsync(int parentId, bool parentIdSpecified)
    {
        this.ListChildrenProfileAsync(parentId, parentIdSpecified, null);
    }

    /// <remarks/>
    public void ListChildrenProfileAsync(int parentId, bool parentIdSpecified, object userState)
    {
        if ((this.ListChildrenProfileOperationCompleted == null))
        {
            this.ListChildrenProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChildrenProfileOperationCompleted);
        }
        this.InvokeAsync("ListChildrenProfile", new object[] {
                    parentId,
                    parentIdSpecified}, this.ListChildrenProfileOperationCompleted, userState);
    }

    private void OnListChildrenProfileOperationCompleted(object arg)
    {
        if ((this.ListChildrenProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListChildrenProfileCompleted(this, new ListChildrenProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetPatientProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Patient GetPatientProfile(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("GetPatientProfile", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((Patient)(results[0]));
    }

    /// <remarks/>
    public void GetPatientProfileAsync(int patientId, bool patientIdSpecified)
    {
        this.GetPatientProfileAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void GetPatientProfileAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.GetPatientProfileOperationCompleted == null))
        {
            this.GetPatientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientProfileOperationCompleted);
        }
        this.InvokeAsync("GetPatientProfile", new object[] {
                    patientId,
                    patientIdSpecified}, this.GetPatientProfileOperationCompleted, userState);
    }

    private void OnGetPatientProfileOperationCompleted(object arg)
    {
        if ((this.GetPatientProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientProfileCompleted(this, new GetPatientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllProviderProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public user[] ListAllProviderProfile()
    {
        object[] results = this.Invoke("ListAllProviderProfile", new object[0]);
        return ((user[])(results[0]));
    }

    /// <remarks/>
    public void ListAllProviderProfileAsync()
    {
        this.ListAllProviderProfileAsync(null);
    }

    /// <remarks/>
    public void ListAllProviderProfileAsync(object userState)
    {
        if ((this.ListAllProviderProfileOperationCompleted == null))
        {
            this.ListAllProviderProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllProviderProfileOperationCompleted);
        }
        this.InvokeAsync("ListAllProviderProfile", new object[0], this.ListAllProviderProfileOperationCompleted, userState);
    }

    private void OnListAllProviderProfileOperationCompleted(object arg)
    {
        if ((this.ListAllProviderProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllProviderProfileCompleted(this, new ListAllProviderProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetChildProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Patient SetChildProfile([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Patient newPatient)
    {
        object[] results = this.Invoke("SetChildProfile", new object[] {
                    newPatient});
        return ((Patient)(results[0]));
    }

    /// <remarks/>
    public void SetChildProfileAsync(Patient newPatient)
    {
        this.SetChildProfileAsync(newPatient, null);
    }

    /// <remarks/>
    public void SetChildProfileAsync(Patient newPatient, object userState)
    {
        if ((this.SetChildProfileOperationCompleted == null))
        {
            this.SetChildProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetChildProfileOperationCompleted);
        }
        this.InvokeAsync("SetChildProfile", new object[] {
                    newPatient}, this.SetChildProfileOperationCompleted, userState);
    }

    private void OnSetChildProfileOperationCompleted(object arg)
    {
        if ((this.SetChildProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetChildProfileCompleted(this, new SetChildProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListPatientsProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Patient[] ListPatientsProfile(int providerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerIdSpecified)
    {
        object[] results = this.Invoke("ListPatientsProfile", new object[] {
                    providerId,
                    providerIdSpecified});
        return ((Patient[])(results[0]));
    }

    /// <remarks/>
    public void ListPatientsProfileAsync(int providerId, bool providerIdSpecified)
    {
        this.ListPatientsProfileAsync(providerId, providerIdSpecified, null);
    }

    /// <remarks/>
    public void ListPatientsProfileAsync(int providerId, bool providerIdSpecified, object userState)
    {
        if ((this.ListPatientsProfileOperationCompleted == null))
        {
            this.ListPatientsProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPatientsProfileOperationCompleted);
        }
        this.InvokeAsync("ListPatientsProfile", new object[] {
                    providerId,
                    providerIdSpecified}, this.ListPatientsProfileOperationCompleted, userState);
    }

    private void OnListPatientsProfileOperationCompleted(object arg)
    {
        if ((this.ListPatientsProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListPatientsProfileCompleted(this, new ListPatientsProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteProfile(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, out bool DeleteProfileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteProfileResultSpecified)
    {
        object[] results = this.Invoke("DeleteProfile", new object[] {
                    userId,
                    userIdSpecified});
        DeleteProfileResult = ((bool)(results[0]));
        DeleteProfileResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteProfileAsync(int userId, bool userIdSpecified)
    {
        this.DeleteProfileAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteProfileAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.DeleteProfileOperationCompleted == null))
        {
            this.DeleteProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileOperationCompleted);
        }
        this.InvokeAsync("DeleteProfile", new object[] {
                    userId,
                    userIdSpecified}, this.DeleteProfileOperationCompleted, userState);
    }

    private void OnDeleteProfileOperationCompleted(object arg)
    {
        if ((this.DeleteProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteProfileCompleted(this, new DeleteProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetUserProfile(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified)
    {
        object[] results = this.Invoke("GetUserProfile", new object[] {
                    userId,
                    userIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetUserProfileAsync(int userId, bool userIdSpecified)
    {
        this.GetUserProfileAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void GetUserProfileAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.GetUserProfileOperationCompleted == null))
        {
            this.GetUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileOperationCompleted);
        }
        this.InvokeAsync("GetUserProfile", new object[] {
                    userId,
                    userIdSpecified}, this.GetUserProfileOperationCompleted, userState);
    }

    private void OnGetUserProfileOperationCompleted(object arg)
    {
        if ((this.GetUserProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserProfileCompleted(this, new GetUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetParentProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetParentProfile(int childId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool childIdSpecified)
    {
        object[] results = this.Invoke("GetParentProfile", new object[] {
                    childId,
                    childIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetParentProfileAsync(int childId, bool childIdSpecified)
    {
        this.GetParentProfileAsync(childId, childIdSpecified, null);
    }

    /// <remarks/>
    public void GetParentProfileAsync(int childId, bool childIdSpecified, object userState)
    {
        if ((this.GetParentProfileOperationCompleted == null))
        {
            this.GetParentProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentProfileOperationCompleted);
        }
        this.InvokeAsync("GetParentProfile", new object[] {
                    childId,
                    childIdSpecified}, this.GetParentProfileOperationCompleted, userState);
    }

    private void OnGetParentProfileOperationCompleted(object arg)
    {
        if ((this.GetParentProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetParentProfileCompleted(this, new GetParentProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetProviderProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetProviderProfile(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("GetProviderProfile", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetProviderProfileAsync(int patientId, bool patientIdSpecified)
    {
        this.GetProviderProfileAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void GetProviderProfileAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.GetProviderProfileOperationCompleted == null))
        {
            this.GetProviderProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderProfileOperationCompleted);
        }
        this.InvokeAsync("GetProviderProfile", new object[] {
                    patientId,
                    patientIdSpecified}, this.GetProviderProfileOperationCompleted, userState);
    }

    private void OnGetProviderProfileOperationCompleted(object arg)
    {
        if ((this.GetProviderProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProviderProfileCompleted(this, new GetProviderProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/CreateUpdateTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void CreateUpdateTherapy([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Therapy newTherapy, out bool CreateUpdateTherapyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateUpdateTherapyResultSpecified)
    {
        object[] results = this.Invoke("CreateUpdateTherapy", new object[] {
                    newTherapy});
        CreateUpdateTherapyResult = ((bool)(results[0]));
        CreateUpdateTherapyResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void CreateUpdateTherapyAsync(Therapy newTherapy)
    {
        this.CreateUpdateTherapyAsync(newTherapy, null);
    }

    /// <remarks/>
    public void CreateUpdateTherapyAsync(Therapy newTherapy, object userState)
    {
        if ((this.CreateUpdateTherapyOperationCompleted == null))
        {
            this.CreateUpdateTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateTherapyOperationCompleted);
        }
        this.InvokeAsync("CreateUpdateTherapy", new object[] {
                    newTherapy}, this.CreateUpdateTherapyOperationCompleted, userState);
    }

    private void OnCreateUpdateTherapyOperationCompleted(object arg)
    {
        if ((this.CreateUpdateTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUpdateTherapyCompleted(this, new CreateUpdateTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/CreateUpdateGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Game CreateUpdateGame([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Game newGame)
    {
        object[] results = this.Invoke("CreateUpdateGame", new object[] {
                    newGame});
        return ((Game)(results[0]));
    }

    /// <remarks/>
    public void CreateUpdateGameAsync(Game newGame)
    {
        this.CreateUpdateGameAsync(newGame, null);
    }

    /// <remarks/>
    public void CreateUpdateGameAsync(Game newGame, object userState)
    {
        if ((this.CreateUpdateGameOperationCompleted == null))
        {
            this.CreateUpdateGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateGameOperationCompleted);
        }
        this.InvokeAsync("CreateUpdateGame", new object[] {
                    newGame}, this.CreateUpdateGameOperationCompleted, userState);
    }

    private void OnCreateUpdateGameOperationCompleted(object arg)
    {
        if ((this.CreateUpdateGameCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUpdateGameCompleted(this, new CreateUpdateGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Therapy[] ListAllTherapy()
    {
        object[] results = this.Invoke("ListAllTherapy", new object[0]);
        return ((Therapy[])(results[0]));
    }

    /// <remarks/>
    public void ListAllTherapyAsync()
    {
        this.ListAllTherapyAsync(null);
    }

    /// <remarks/>
    public void ListAllTherapyAsync(object userState)
    {
        if ((this.ListAllTherapyOperationCompleted == null))
        {
            this.ListAllTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllTherapyOperationCompleted);
        }
        this.InvokeAsync("ListAllTherapy", new object[0], this.ListAllTherapyOperationCompleted, userState);
    }

    private void OnListAllTherapyOperationCompleted(object arg)
    {
        if ((this.ListAllTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllTherapyCompleted(this, new ListAllTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllGamesForTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Game[] ListAllGamesForTherapy(int therapyId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool therapyIdSpecified)
    {
        object[] results = this.Invoke("ListAllGamesForTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified});
        return ((Game[])(results[0]));
    }

    /// <remarks/>
    public void ListAllGamesForTherapyAsync(int therapyId, bool therapyIdSpecified)
    {
        this.ListAllGamesForTherapyAsync(therapyId, therapyIdSpecified, null);
    }

    /// <remarks/>
    public void ListAllGamesForTherapyAsync(int therapyId, bool therapyIdSpecified, object userState)
    {
        if ((this.ListAllGamesForTherapyOperationCompleted == null))
        {
            this.ListAllGamesForTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllGamesForTherapyOperationCompleted);
        }
        this.InvokeAsync("ListAllGamesForTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified}, this.ListAllGamesForTherapyOperationCompleted, userState);
    }

    private void OnListAllGamesForTherapyOperationCompleted(object arg)
    {
        if ((this.ListAllGamesForTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllGamesForTherapyCompleted(this, new ListAllGamesForTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteGame(int gameId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameIdSpecified, out bool DeleteGameResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteGameResultSpecified)
    {
        object[] results = this.Invoke("DeleteGame", new object[] {
                    gameId,
                    gameIdSpecified});
        DeleteGameResult = ((bool)(results[0]));
        DeleteGameResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteGameAsync(int gameId, bool gameIdSpecified)
    {
        this.DeleteGameAsync(gameId, gameIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteGameAsync(int gameId, bool gameIdSpecified, object userState)
    {
        if ((this.DeleteGameOperationCompleted == null))
        {
            this.DeleteGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGameOperationCompleted);
        }
        this.InvokeAsync("DeleteGame", new object[] {
                    gameId,
                    gameIdSpecified}, this.DeleteGameOperationCompleted, userState);
    }

    private void OnDeleteGameOperationCompleted(object arg)
    {
        if ((this.DeleteGameCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteGameCompleted(this, new DeleteGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteTherapy(int therapyId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool therapyIdSpecified, out bool DeleteTherapyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteTherapyResultSpecified)
    {
        object[] results = this.Invoke("DeleteTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified});
        DeleteTherapyResult = ((bool)(results[0]));
        DeleteTherapyResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteTherapyAsync(int therapyId, bool therapyIdSpecified)
    {
        this.DeleteTherapyAsync(therapyId, therapyIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteTherapyAsync(int therapyId, bool therapyIdSpecified, object userState)
    {
        if ((this.DeleteTherapyOperationCompleted == null))
        {
            this.DeleteTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTherapyOperationCompleted);
        }
        this.InvokeAsync("DeleteTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified}, this.DeleteTherapyOperationCompleted, userState);
    }

    private void OnDeleteTherapyOperationCompleted(object arg)
    {
        if ((this.DeleteTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteTherapyCompleted(this, new DeleteTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListGameScoresForPatient", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGameScore ListGameScoresForPatient([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGameScore patientGameScore)
    {
        object[] results = this.Invoke("ListGameScoresForPatient", new object[] {
                    patientGameScore});
        return ((PatientGameScore)(results[0]));
    }

    /// <remarks/>
    public void ListGameScoresForPatientAsync(PatientGameScore patientGameScore)
    {
        this.ListGameScoresForPatientAsync(patientGameScore, null);
    }

    /// <remarks/>
    public void ListGameScoresForPatientAsync(PatientGameScore patientGameScore, object userState)
    {
        if ((this.ListGameScoresForPatientOperationCompleted == null))
        {
            this.ListGameScoresForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGameScoresForPatientOperationCompleted);
        }
        this.InvokeAsync("ListGameScoresForPatient", new object[] {
                    patientGameScore}, this.ListGameScoresForPatientOperationCompleted, userState);
    }

    private void OnListGameScoresForPatientOperationCompleted(object arg)
    {
        if ((this.ListGameScoresForPatientCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListGameScoresForPatientCompleted(this, new ListGameScoresForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGames ListGameAssignment(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("ListGameAssignment", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((PatientGames)(results[0]));
    }

    /// <remarks/>
    public void ListGameAssignmentAsync(int patientId, bool patientIdSpecified)
    {
        this.ListGameAssignmentAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void ListGameAssignmentAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.ListGameAssignmentOperationCompleted == null))
        {
            this.ListGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("ListGameAssignment", new object[] {
                    patientId,
                    patientIdSpecified}, this.ListGameAssignmentOperationCompleted, userState);
    }

    private void OnListGameAssignmentOperationCompleted(object arg)
    {
        if ((this.ListGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListGameAssignmentCompleted(this, new ListGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetGameScoresForPatient", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGameScore SetGameScoresForPatient([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGameScore patientGameScore)
    {
        object[] results = this.Invoke("SetGameScoresForPatient", new object[] {
                    patientGameScore});
        return ((PatientGameScore)(results[0]));
    }

    /// <remarks/>
    public void SetGameScoresForPatientAsync(PatientGameScore patientGameScore)
    {
        this.SetGameScoresForPatientAsync(patientGameScore, null);
    }

    /// <remarks/>
    public void SetGameScoresForPatientAsync(PatientGameScore patientGameScore, object userState)
    {
        if ((this.SetGameScoresForPatientOperationCompleted == null))
        {
            this.SetGameScoresForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameScoresForPatientOperationCompleted);
        }
        this.InvokeAsync("SetGameScoresForPatient", new object[] {
                    patientGameScore}, this.SetGameScoresForPatientOperationCompleted, userState);
    }

    private void OnSetGameScoresForPatientOperationCompleted(object arg)
    {
        if ((this.SetGameScoresForPatientCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGameScoresForPatientCompleted(this, new SetGameScoresForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetGameAssignment([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGames patientGames, out bool SetGameAssignmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SetGameAssignmentResultSpecified)
    {
        object[] results = this.Invoke("SetGameAssignment", new object[] {
                    patientGames});
        SetGameAssignmentResult = ((bool)(results[0]));
        SetGameAssignmentResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void SetGameAssignmentAsync(PatientGames patientGames)
    {
        this.SetGameAssignmentAsync(patientGames, null);
    }

    /// <remarks/>
    public void SetGameAssignmentAsync(PatientGames patientGames, object userState)
    {
        if ((this.SetGameAssignmentOperationCompleted == null))
        {
            this.SetGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("SetGameAssignment", new object[] {
                    patientGames}, this.SetGameAssignmentOperationCompleted, userState);
    }

    private void OnSetGameAssignmentOperationCompleted(object arg)
    {
        if ((this.SetGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGameAssignmentCompleted(this, new SetGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteGameAssignment([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGames patientGames, out bool DeleteGameAssignmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteGameAssignmentResultSpecified)
    {
        object[] results = this.Invoke("DeleteGameAssignment", new object[] {
                    patientGames});
        DeleteGameAssignmentResult = ((bool)(results[0]));
        DeleteGameAssignmentResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteGameAssignmentAsync(PatientGames patientGames)
    {
        this.DeleteGameAssignmentAsync(patientGames, null);
    }

    /// <remarks/>
    public void DeleteGameAssignmentAsync(PatientGames patientGames, object userState)
    {
        if ((this.DeleteGameAssignmentOperationCompleted == null))
        {
            this.DeleteGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("DeleteGameAssignment", new object[] {
                    patientGames}, this.DeleteGameAssignmentOperationCompleted, userState);
    }

    private void OnDeleteGameAssignmentOperationCompleted(object arg)
    {
        if ((this.DeleteGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteGameAssignmentCompleted(this, new DeleteGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
// CODEGEN: 未处理命名空间“http://schemas.xmlsoap.org/ws/2004/09/policy”中的可选 WSDL 扩展元素“PolicyReference”。
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpsBinding_IEyeWebService", Namespace = "http://tempuri.org/")]
public partial class BasicHttpsBinding_IEyeWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback SetProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserIdOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserTypeIdOperationCompleted;

    private System.Threading.SendOrPostCallback ListChildrenProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetPatientProfileOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllProviderProfileOperationCompleted;

    private System.Threading.SendOrPostCallback SetChildProfileOperationCompleted;

    private System.Threading.SendOrPostCallback ListPatientsProfileOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetUserProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetParentProfileOperationCompleted;

    private System.Threading.SendOrPostCallback GetProviderProfileOperationCompleted;

    private System.Threading.SendOrPostCallback CreateUpdateTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback CreateUpdateGameOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback ListAllGamesForTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteGameOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteTherapyOperationCompleted;

    private System.Threading.SendOrPostCallback ListGameScoresForPatientOperationCompleted;

    private System.Threading.SendOrPostCallback ListGameAssignmentOperationCompleted;

    private System.Threading.SendOrPostCallback SetGameScoresForPatientOperationCompleted;

    private System.Threading.SendOrPostCallback SetGameAssignmentOperationCompleted;

    private System.Threading.SendOrPostCallback DeleteGameAssignmentOperationCompleted;

    /// <remarks/>
    public BasicHttpsBinding_IEyeWebService()
    {
        this.Url = "https://eyeplatform.azurewebsites.net/EyeWebService.svc";
    }

    /// <remarks/>
    public event SetProfileCompletedEventHandler SetProfileCompleted;

    /// <remarks/>
    public event GetUserIdCompletedEventHandler GetUserIdCompleted;

    /// <remarks/>
    public event GetUserTypeIdCompletedEventHandler GetUserTypeIdCompleted;

    /// <remarks/>
    public event ListChildrenProfileCompletedEventHandler ListChildrenProfileCompleted;

    /// <remarks/>
    public event GetPatientProfileCompletedEventHandler GetPatientProfileCompleted;

    /// <remarks/>
    public event ListAllProviderProfileCompletedEventHandler ListAllProviderProfileCompleted;

    /// <remarks/>
    public event SetChildProfileCompletedEventHandler SetChildProfileCompleted;

    /// <remarks/>
    public event ListPatientsProfileCompletedEventHandler ListPatientsProfileCompleted;

    /// <remarks/>
    public event DeleteProfileCompletedEventHandler DeleteProfileCompleted;

    /// <remarks/>
    public event GetUserProfileCompletedEventHandler GetUserProfileCompleted;

    /// <remarks/>
    public event GetParentProfileCompletedEventHandler GetParentProfileCompleted;

    /// <remarks/>
    public event GetProviderProfileCompletedEventHandler GetProviderProfileCompleted;

    /// <remarks/>
    public event CreateUpdateTherapyCompletedEventHandler CreateUpdateTherapyCompleted;

    /// <remarks/>
    public event CreateUpdateGameCompletedEventHandler CreateUpdateGameCompleted;

    /// <remarks/>
    public event ListAllTherapyCompletedEventHandler ListAllTherapyCompleted;

    /// <remarks/>
    public event ListAllGamesForTherapyCompletedEventHandler ListAllGamesForTherapyCompleted;

    /// <remarks/>
    public event DeleteGameCompletedEventHandler DeleteGameCompleted;

    /// <remarks/>
    public event DeleteTherapyCompletedEventHandler DeleteTherapyCompleted;

    /// <remarks/>
    public event ListGameScoresForPatientCompletedEventHandler ListGameScoresForPatientCompleted;

    /// <remarks/>
    public event ListGameAssignmentCompletedEventHandler ListGameAssignmentCompleted;

    /// <remarks/>
    public event SetGameScoresForPatientCompletedEventHandler SetGameScoresForPatientCompleted;

    /// <remarks/>
    public event SetGameAssignmentCompletedEventHandler SetGameAssignmentCompleted;

    /// <remarks/>
    public event DeleteGameAssignmentCompletedEventHandler DeleteGameAssignmentCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetProfile([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] user newUser, out bool SetProfileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SetProfileResultSpecified)
    {
        object[] results = this.Invoke("SetProfile", new object[] {
                    newUser});
        SetProfileResult = ((bool)(results[0]));
        SetProfileResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void SetProfileAsync(user newUser)
    {
        this.SetProfileAsync(newUser, null);
    }

    /// <remarks/>
    public void SetProfileAsync(user newUser, object userState)
    {
        if ((this.SetProfileOperationCompleted == null))
        {
            this.SetProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProfileOperationCompleted);
        }
        this.InvokeAsync("SetProfile", new object[] {
                    newUser}, this.SetProfileOperationCompleted, userState);
    }

    private void OnSetProfileOperationCompleted(object arg)
    {
        if ((this.SetProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetProfileCompleted(this, new SetProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void GetUserId([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string loginId, out int GetUserIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserIdResultSpecified)
    {
        object[] results = this.Invoke("GetUserId", new object[] {
                    loginId});
        GetUserIdResult = ((int)(results[0]));
        GetUserIdResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void GetUserIdAsync(string loginId)
    {
        this.GetUserIdAsync(loginId, null);
    }

    /// <remarks/>
    public void GetUserIdAsync(string loginId, object userState)
    {
        if ((this.GetUserIdOperationCompleted == null))
        {
            this.GetUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdOperationCompleted);
        }
        this.InvokeAsync("GetUserId", new object[] {
                    loginId}, this.GetUserIdOperationCompleted, userState);
    }

    private void OnGetUserIdOperationCompleted(object arg)
    {
        if ((this.GetUserIdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserIdCompleted(this, new GetUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserTypeId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void GetUserTypeId(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, out int GetUserTypeIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserTypeIdResultSpecified)
    {
        object[] results = this.Invoke("GetUserTypeId", new object[] {
                    userId,
                    userIdSpecified});
        GetUserTypeIdResult = ((int)(results[0]));
        GetUserTypeIdResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void GetUserTypeIdAsync(int userId, bool userIdSpecified)
    {
        this.GetUserTypeIdAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void GetUserTypeIdAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.GetUserTypeIdOperationCompleted == null))
        {
            this.GetUserTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeIdOperationCompleted);
        }
        this.InvokeAsync("GetUserTypeId", new object[] {
                    userId,
                    userIdSpecified}, this.GetUserTypeIdOperationCompleted, userState);
    }

    private void OnGetUserTypeIdOperationCompleted(object arg)
    {
        if ((this.GetUserTypeIdCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserTypeIdCompleted(this, new GetUserTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListChildrenProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Patient[] ListChildrenProfile(int parentId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool parentIdSpecified)
    {
        object[] results = this.Invoke("ListChildrenProfile", new object[] {
                    parentId,
                    parentIdSpecified});
        return ((Patient[])(results[0]));
    }

    /// <remarks/>
    public void ListChildrenProfileAsync(int parentId, bool parentIdSpecified)
    {
        this.ListChildrenProfileAsync(parentId, parentIdSpecified, null);
    }

    /// <remarks/>
    public void ListChildrenProfileAsync(int parentId, bool parentIdSpecified, object userState)
    {
        if ((this.ListChildrenProfileOperationCompleted == null))
        {
            this.ListChildrenProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListChildrenProfileOperationCompleted);
        }
        this.InvokeAsync("ListChildrenProfile", new object[] {
                    parentId,
                    parentIdSpecified}, this.ListChildrenProfileOperationCompleted, userState);
    }

    private void OnListChildrenProfileOperationCompleted(object arg)
    {
        if ((this.ListChildrenProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListChildrenProfileCompleted(this, new ListChildrenProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetPatientProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Patient GetPatientProfile(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("GetPatientProfile", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((Patient)(results[0]));
    }

    /// <remarks/>
    public void GetPatientProfileAsync(int patientId, bool patientIdSpecified)
    {
        this.GetPatientProfileAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void GetPatientProfileAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.GetPatientProfileOperationCompleted == null))
        {
            this.GetPatientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientProfileOperationCompleted);
        }
        this.InvokeAsync("GetPatientProfile", new object[] {
                    patientId,
                    patientIdSpecified}, this.GetPatientProfileOperationCompleted, userState);
    }

    private void OnGetPatientProfileOperationCompleted(object arg)
    {
        if ((this.GetPatientProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientProfileCompleted(this, new GetPatientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllProviderProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public user[] ListAllProviderProfile()
    {
        object[] results = this.Invoke("ListAllProviderProfile", new object[0]);
        return ((user[])(results[0]));
    }

    /// <remarks/>
    public void ListAllProviderProfileAsync()
    {
        this.ListAllProviderProfileAsync(null);
    }

    /// <remarks/>
    public void ListAllProviderProfileAsync(object userState)
    {
        if ((this.ListAllProviderProfileOperationCompleted == null))
        {
            this.ListAllProviderProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllProviderProfileOperationCompleted);
        }
        this.InvokeAsync("ListAllProviderProfile", new object[0], this.ListAllProviderProfileOperationCompleted, userState);
    }

    private void OnListAllProviderProfileOperationCompleted(object arg)
    {
        if ((this.ListAllProviderProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllProviderProfileCompleted(this, new ListAllProviderProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetChildProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Patient SetChildProfile([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Patient newPatient)
    {
        object[] results = this.Invoke("SetChildProfile", new object[] {
                    newPatient});
        return ((Patient)(results[0]));
    }

    /// <remarks/>
    public void SetChildProfileAsync(Patient newPatient)
    {
        this.SetChildProfileAsync(newPatient, null);
    }

    /// <remarks/>
    public void SetChildProfileAsync(Patient newPatient, object userState)
    {
        if ((this.SetChildProfileOperationCompleted == null))
        {
            this.SetChildProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetChildProfileOperationCompleted);
        }
        this.InvokeAsync("SetChildProfile", new object[] {
                    newPatient}, this.SetChildProfileOperationCompleted, userState);
    }

    private void OnSetChildProfileOperationCompleted(object arg)
    {
        if ((this.SetChildProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetChildProfileCompleted(this, new SetChildProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListPatientsProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Patient[] ListPatientsProfile(int providerId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerIdSpecified)
    {
        object[] results = this.Invoke("ListPatientsProfile", new object[] {
                    providerId,
                    providerIdSpecified});
        return ((Patient[])(results[0]));
    }

    /// <remarks/>
    public void ListPatientsProfileAsync(int providerId, bool providerIdSpecified)
    {
        this.ListPatientsProfileAsync(providerId, providerIdSpecified, null);
    }

    /// <remarks/>
    public void ListPatientsProfileAsync(int providerId, bool providerIdSpecified, object userState)
    {
        if ((this.ListPatientsProfileOperationCompleted == null))
        {
            this.ListPatientsProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPatientsProfileOperationCompleted);
        }
        this.InvokeAsync("ListPatientsProfile", new object[] {
                    providerId,
                    providerIdSpecified}, this.ListPatientsProfileOperationCompleted, userState);
    }

    private void OnListPatientsProfileOperationCompleted(object arg)
    {
        if ((this.ListPatientsProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListPatientsProfileCompleted(this, new ListPatientsProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteProfile(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, out bool DeleteProfileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteProfileResultSpecified)
    {
        object[] results = this.Invoke("DeleteProfile", new object[] {
                    userId,
                    userIdSpecified});
        DeleteProfileResult = ((bool)(results[0]));
        DeleteProfileResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteProfileAsync(int userId, bool userIdSpecified)
    {
        this.DeleteProfileAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteProfileAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.DeleteProfileOperationCompleted == null))
        {
            this.DeleteProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileOperationCompleted);
        }
        this.InvokeAsync("DeleteProfile", new object[] {
                    userId,
                    userIdSpecified}, this.DeleteProfileOperationCompleted, userState);
    }

    private void OnDeleteProfileOperationCompleted(object arg)
    {
        if ((this.DeleteProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteProfileCompleted(this, new DeleteProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetUserProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetUserProfile(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified)
    {
        object[] results = this.Invoke("GetUserProfile", new object[] {
                    userId,
                    userIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetUserProfileAsync(int userId, bool userIdSpecified)
    {
        this.GetUserProfileAsync(userId, userIdSpecified, null);
    }

    /// <remarks/>
    public void GetUserProfileAsync(int userId, bool userIdSpecified, object userState)
    {
        if ((this.GetUserProfileOperationCompleted == null))
        {
            this.GetUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileOperationCompleted);
        }
        this.InvokeAsync("GetUserProfile", new object[] {
                    userId,
                    userIdSpecified}, this.GetUserProfileOperationCompleted, userState);
    }

    private void OnGetUserProfileOperationCompleted(object arg)
    {
        if ((this.GetUserProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserProfileCompleted(this, new GetUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetParentProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetParentProfile(int childId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool childIdSpecified)
    {
        object[] results = this.Invoke("GetParentProfile", new object[] {
                    childId,
                    childIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetParentProfileAsync(int childId, bool childIdSpecified)
    {
        this.GetParentProfileAsync(childId, childIdSpecified, null);
    }

    /// <remarks/>
    public void GetParentProfileAsync(int childId, bool childIdSpecified, object userState)
    {
        if ((this.GetParentProfileOperationCompleted == null))
        {
            this.GetParentProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentProfileOperationCompleted);
        }
        this.InvokeAsync("GetParentProfile", new object[] {
                    childId,
                    childIdSpecified}, this.GetParentProfileOperationCompleted, userState);
    }

    private void OnGetParentProfileOperationCompleted(object arg)
    {
        if ((this.GetParentProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetParentProfileCompleted(this, new GetParentProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/GetProviderProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public user GetProviderProfile(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("GetProviderProfile", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((user)(results[0]));
    }

    /// <remarks/>
    public void GetProviderProfileAsync(int patientId, bool patientIdSpecified)
    {
        this.GetProviderProfileAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void GetProviderProfileAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.GetProviderProfileOperationCompleted == null))
        {
            this.GetProviderProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderProfileOperationCompleted);
        }
        this.InvokeAsync("GetProviderProfile", new object[] {
                    patientId,
                    patientIdSpecified}, this.GetProviderProfileOperationCompleted, userState);
    }

    private void OnGetProviderProfileOperationCompleted(object arg)
    {
        if ((this.GetProviderProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProviderProfileCompleted(this, new GetProviderProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/CreateUpdateTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void CreateUpdateTherapy([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Therapy newTherapy, out bool CreateUpdateTherapyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateUpdateTherapyResultSpecified)
    {
        object[] results = this.Invoke("CreateUpdateTherapy", new object[] {
                    newTherapy});
        CreateUpdateTherapyResult = ((bool)(results[0]));
        CreateUpdateTherapyResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void CreateUpdateTherapyAsync(Therapy newTherapy)
    {
        this.CreateUpdateTherapyAsync(newTherapy, null);
    }

    /// <remarks/>
    public void CreateUpdateTherapyAsync(Therapy newTherapy, object userState)
    {
        if ((this.CreateUpdateTherapyOperationCompleted == null))
        {
            this.CreateUpdateTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateTherapyOperationCompleted);
        }
        this.InvokeAsync("CreateUpdateTherapy", new object[] {
                    newTherapy}, this.CreateUpdateTherapyOperationCompleted, userState);
    }

    private void OnCreateUpdateTherapyOperationCompleted(object arg)
    {
        if ((this.CreateUpdateTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUpdateTherapyCompleted(this, new CreateUpdateTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/CreateUpdateGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Game CreateUpdateGame([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] Game newGame)
    {
        object[] results = this.Invoke("CreateUpdateGame", new object[] {
                    newGame});
        return ((Game)(results[0]));
    }

    /// <remarks/>
    public void CreateUpdateGameAsync(Game newGame)
    {
        this.CreateUpdateGameAsync(newGame, null);
    }

    /// <remarks/>
    public void CreateUpdateGameAsync(Game newGame, object userState)
    {
        if ((this.CreateUpdateGameOperationCompleted == null))
        {
            this.CreateUpdateGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateGameOperationCompleted);
        }
        this.InvokeAsync("CreateUpdateGame", new object[] {
                    newGame}, this.CreateUpdateGameOperationCompleted, userState);
    }

    private void OnCreateUpdateGameOperationCompleted(object arg)
    {
        if ((this.CreateUpdateGameCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUpdateGameCompleted(this, new CreateUpdateGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Therapy[] ListAllTherapy()
    {
        object[] results = this.Invoke("ListAllTherapy", new object[0]);
        return ((Therapy[])(results[0]));
    }

    /// <remarks/>
    public void ListAllTherapyAsync()
    {
        this.ListAllTherapyAsync(null);
    }

    /// <remarks/>
    public void ListAllTherapyAsync(object userState)
    {
        if ((this.ListAllTherapyOperationCompleted == null))
        {
            this.ListAllTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllTherapyOperationCompleted);
        }
        this.InvokeAsync("ListAllTherapy", new object[0], this.ListAllTherapyOperationCompleted, userState);
    }

    private void OnListAllTherapyOperationCompleted(object arg)
    {
        if ((this.ListAllTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllTherapyCompleted(this, new ListAllTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListAllGamesForTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
    public Game[] ListAllGamesForTherapy(int therapyId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool therapyIdSpecified)
    {
        object[] results = this.Invoke("ListAllGamesForTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified});
        return ((Game[])(results[0]));
    }

    /// <remarks/>
    public void ListAllGamesForTherapyAsync(int therapyId, bool therapyIdSpecified)
    {
        this.ListAllGamesForTherapyAsync(therapyId, therapyIdSpecified, null);
    }

    /// <remarks/>
    public void ListAllGamesForTherapyAsync(int therapyId, bool therapyIdSpecified, object userState)
    {
        if ((this.ListAllGamesForTherapyOperationCompleted == null))
        {
            this.ListAllGamesForTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllGamesForTherapyOperationCompleted);
        }
        this.InvokeAsync("ListAllGamesForTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified}, this.ListAllGamesForTherapyOperationCompleted, userState);
    }

    private void OnListAllGamesForTherapyOperationCompleted(object arg)
    {
        if ((this.ListAllGamesForTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListAllGamesForTherapyCompleted(this, new ListAllGamesForTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteGame", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteGame(int gameId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool gameIdSpecified, out bool DeleteGameResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteGameResultSpecified)
    {
        object[] results = this.Invoke("DeleteGame", new object[] {
                    gameId,
                    gameIdSpecified});
        DeleteGameResult = ((bool)(results[0]));
        DeleteGameResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteGameAsync(int gameId, bool gameIdSpecified)
    {
        this.DeleteGameAsync(gameId, gameIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteGameAsync(int gameId, bool gameIdSpecified, object userState)
    {
        if ((this.DeleteGameOperationCompleted == null))
        {
            this.DeleteGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGameOperationCompleted);
        }
        this.InvokeAsync("DeleteGame", new object[] {
                    gameId,
                    gameIdSpecified}, this.DeleteGameOperationCompleted, userState);
    }

    private void OnDeleteGameOperationCompleted(object arg)
    {
        if ((this.DeleteGameCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteGameCompleted(this, new DeleteGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteTherapy", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteTherapy(int therapyId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool therapyIdSpecified, out bool DeleteTherapyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteTherapyResultSpecified)
    {
        object[] results = this.Invoke("DeleteTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified});
        DeleteTherapyResult = ((bool)(results[0]));
        DeleteTherapyResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteTherapyAsync(int therapyId, bool therapyIdSpecified)
    {
        this.DeleteTherapyAsync(therapyId, therapyIdSpecified, null);
    }

    /// <remarks/>
    public void DeleteTherapyAsync(int therapyId, bool therapyIdSpecified, object userState)
    {
        if ((this.DeleteTherapyOperationCompleted == null))
        {
            this.DeleteTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTherapyOperationCompleted);
        }
        this.InvokeAsync("DeleteTherapy", new object[] {
                    therapyId,
                    therapyIdSpecified}, this.DeleteTherapyOperationCompleted, userState);
    }

    private void OnDeleteTherapyOperationCompleted(object arg)
    {
        if ((this.DeleteTherapyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteTherapyCompleted(this, new DeleteTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListGameScoresForPatient", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGameScore ListGameScoresForPatient([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGameScore patientGameScore)
    {
        object[] results = this.Invoke("ListGameScoresForPatient", new object[] {
                    patientGameScore});
        return ((PatientGameScore)(results[0]));
    }

    /// <remarks/>
    public void ListGameScoresForPatientAsync(PatientGameScore patientGameScore)
    {
        this.ListGameScoresForPatientAsync(patientGameScore, null);
    }

    /// <remarks/>
    public void ListGameScoresForPatientAsync(PatientGameScore patientGameScore, object userState)
    {
        if ((this.ListGameScoresForPatientOperationCompleted == null))
        {
            this.ListGameScoresForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGameScoresForPatientOperationCompleted);
        }
        this.InvokeAsync("ListGameScoresForPatient", new object[] {
                    patientGameScore}, this.ListGameScoresForPatientOperationCompleted, userState);
    }

    private void OnListGameScoresForPatientOperationCompleted(object arg)
    {
        if ((this.ListGameScoresForPatientCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListGameScoresForPatientCompleted(this, new ListGameScoresForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/ListGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGames ListGameAssignment(int patientId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool patientIdSpecified)
    {
        object[] results = this.Invoke("ListGameAssignment", new object[] {
                    patientId,
                    patientIdSpecified});
        return ((PatientGames)(results[0]));
    }

    /// <remarks/>
    public void ListGameAssignmentAsync(int patientId, bool patientIdSpecified)
    {
        this.ListGameAssignmentAsync(patientId, patientIdSpecified, null);
    }

    /// <remarks/>
    public void ListGameAssignmentAsync(int patientId, bool patientIdSpecified, object userState)
    {
        if ((this.ListGameAssignmentOperationCompleted == null))
        {
            this.ListGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("ListGameAssignment", new object[] {
                    patientId,
                    patientIdSpecified}, this.ListGameAssignmentOperationCompleted, userState);
    }

    private void OnListGameAssignmentOperationCompleted(object arg)
    {
        if ((this.ListGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListGameAssignmentCompleted(this, new ListGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetGameScoresForPatient", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public PatientGameScore SetGameScoresForPatient([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGameScore patientGameScore)
    {
        object[] results = this.Invoke("SetGameScoresForPatient", new object[] {
                    patientGameScore});
        return ((PatientGameScore)(results[0]));
    }

    /// <remarks/>
    public void SetGameScoresForPatientAsync(PatientGameScore patientGameScore)
    {
        this.SetGameScoresForPatientAsync(patientGameScore, null);
    }

    /// <remarks/>
    public void SetGameScoresForPatientAsync(PatientGameScore patientGameScore, object userState)
    {
        if ((this.SetGameScoresForPatientOperationCompleted == null))
        {
            this.SetGameScoresForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameScoresForPatientOperationCompleted);
        }
        this.InvokeAsync("SetGameScoresForPatient", new object[] {
                    patientGameScore}, this.SetGameScoresForPatientOperationCompleted, userState);
    }

    private void OnSetGameScoresForPatientOperationCompleted(object arg)
    {
        if ((this.SetGameScoresForPatientCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGameScoresForPatientCompleted(this, new SetGameScoresForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/SetGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetGameAssignment([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGames patientGames, out bool SetGameAssignmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SetGameAssignmentResultSpecified)
    {
        object[] results = this.Invoke("SetGameAssignment", new object[] {
                    patientGames});
        SetGameAssignmentResult = ((bool)(results[0]));
        SetGameAssignmentResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void SetGameAssignmentAsync(PatientGames patientGames)
    {
        this.SetGameAssignmentAsync(patientGames, null);
    }

    /// <remarks/>
    public void SetGameAssignmentAsync(PatientGames patientGames, object userState)
    {
        if ((this.SetGameAssignmentOperationCompleted == null))
        {
            this.SetGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("SetGameAssignment", new object[] {
                    patientGames}, this.SetGameAssignmentOperationCompleted, userState);
    }

    private void OnSetGameAssignmentOperationCompleted(object arg)
    {
        if ((this.SetGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGameAssignmentCompleted(this, new SetGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEyeWebService/DeleteGameAssignment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteGameAssignment([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] PatientGames patientGames, out bool DeleteGameAssignmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteGameAssignmentResultSpecified)
    {
        object[] results = this.Invoke("DeleteGameAssignment", new object[] {
                    patientGames});
        DeleteGameAssignmentResult = ((bool)(results[0]));
        DeleteGameAssignmentResultSpecified = ((bool)(results[1]));
    }

    /// <remarks/>
    public void DeleteGameAssignmentAsync(PatientGames patientGames)
    {
        this.DeleteGameAssignmentAsync(patientGames, null);
    }

    /// <remarks/>
    public void DeleteGameAssignmentAsync(PatientGames patientGames, object userState)
    {
        if ((this.DeleteGameAssignmentOperationCompleted == null))
        {
            this.DeleteGameAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGameAssignmentOperationCompleted);
        }
        this.InvokeAsync("DeleteGameAssignment", new object[] {
                    patientGames}, this.DeleteGameAssignmentOperationCompleted, userState);
    }

    private void OnDeleteGameAssignmentOperationCompleted(object arg)
    {
        if ((this.DeleteGameAssignmentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteGameAssignmentCompleted(this, new DeleteGameAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class user
{

    private Address[] addressListField;

    private string dobField;

    private string firstNameField;

    private string genderField;

    private string lastNameField;

    private string loginIdField;

    private int userIdField;

    private bool userIdFieldSpecified;

    private int userTypeIdField;

    private bool userTypeIdFieldSpecified;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    public Address[] addressList
    {
        get
        {
            return this.addressListField;
        }
        set
        {
            this.addressListField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string dob
    {
        get
        {
            return this.dobField;
        }
        set
        {
            this.dobField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string firstName
    {
        get
        {
            return this.firstNameField;
        }
        set
        {
            this.firstNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string gender
    {
        get
        {
            return this.genderField;
        }
        set
        {
            this.genderField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string lastName
    {
        get
        {
            return this.lastNameField;
        }
        set
        {
            this.lastNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string loginId
    {
        get
        {
            return this.loginIdField;
        }
        set
        {
            this.loginIdField = value;
        }
    }

    /// <remarks/>
    public int userId
    {
        get
        {
            return this.userIdField;
        }
        set
        {
            this.userIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userIdSpecified
    {
        get
        {
            return this.userIdFieldSpecified;
        }
        set
        {
            this.userIdFieldSpecified = value;
        }
    }

    /// <remarks/>
    public int userTypeId
    {
        get
        {
            return this.userTypeIdField;
        }
        set
        {
            this.userTypeIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userTypeIdSpecified
    {
        get
        {
            return this.userTypeIdFieldSpecified;
        }
        set
        {
            this.userTypeIdFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class Address
{

    private string addressTypeField;

    private string cityField;

    private string countryField;

    private string phoneNoField;

    private string stateNameField;

    private string streetNameField;

    private string zipcodeField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string addressType
    {
        get
        {
            return this.addressTypeField;
        }
        set
        {
            this.addressTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string city
    {
        get
        {
            return this.cityField;
        }
        set
        {
            this.cityField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string country
    {
        get
        {
            return this.countryField;
        }
        set
        {
            this.countryField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string phoneNo
    {
        get
        {
            return this.phoneNoField;
        }
        set
        {
            this.phoneNoField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string stateName
    {
        get
        {
            return this.stateNameField;
        }
        set
        {
            this.stateNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string streetName
    {
        get
        {
            return this.streetNameField;
        }
        set
        {
            this.streetNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string zipcode
    {
        get
        {
            return this.zipcodeField;
        }
        set
        {
            this.zipcodeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class GameAssignment
{

    private string endDateField;

    private Game gameField;

    private int levelField;

    private bool levelFieldSpecified;

    private string startDateField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string endDate
    {
        get
        {
            return this.endDateField;
        }
        set
        {
            this.endDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Game game
    {
        get
        {
            return this.gameField;
        }
        set
        {
            this.gameField = value;
        }
    }

    /// <remarks/>
    public int level
    {
        get
        {
            return this.levelField;
        }
        set
        {
            this.levelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool levelSpecified
    {
        get
        {
            return this.levelFieldSpecified;
        }
        set
        {
            this.levelFieldSpecified = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string startDate
    {
        get
        {
            return this.startDateField;
        }
        set
        {
            this.startDateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class Game
{

    private string gameDescriptionField;

    private int gameIdField;

    private bool gameIdFieldSpecified;

    private string gameNameField;

    private Therapy therapyField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string gameDescription
    {
        get
        {
            return this.gameDescriptionField;
        }
        set
        {
            this.gameDescriptionField = value;
        }
    }

    /// <remarks/>
    public int gameId
    {
        get
        {
            return this.gameIdField;
        }
        set
        {
            this.gameIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool gameIdSpecified
    {
        get
        {
            return this.gameIdFieldSpecified;
        }
        set
        {
            this.gameIdFieldSpecified = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string gameName
    {
        get
        {
            return this.gameNameField;
        }
        set
        {
            this.gameNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Therapy therapy
    {
        get
        {
            return this.therapyField;
        }
        set
        {
            this.therapyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class Therapy
{

    private string therapyDescriptionField;

    private int therapyIdField;

    private bool therapyIdFieldSpecified;

    private string therapyNameField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string therapyDescription
    {
        get
        {
            return this.therapyDescriptionField;
        }
        set
        {
            this.therapyDescriptionField = value;
        }
    }

    /// <remarks/>
    public int therapyId
    {
        get
        {
            return this.therapyIdField;
        }
        set
        {
            this.therapyIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool therapyIdSpecified
    {
        get
        {
            return this.therapyIdFieldSpecified;
        }
        set
        {
            this.therapyIdFieldSpecified = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string therapyName
    {
        get
        {
            return this.therapyNameField;
        }
        set
        {
            this.therapyNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class PatientGames
{

    private GameAssignment[] gameAssignmentsField;

    private int patientIdField;

    private bool patientIdFieldSpecified;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    public GameAssignment[] gameAssignments
    {
        get
        {
            return this.gameAssignmentsField;
        }
        set
        {
            this.gameAssignmentsField = value;
        }
    }

    /// <remarks/>
    public int patientId
    {
        get
        {
            return this.patientIdField;
        }
        set
        {
            this.patientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patientIdSpecified
    {
        get
        {
            return this.patientIdFieldSpecified;
        }
        set
        {
            this.patientIdFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class GameAuxScore
{

    private int idField;

    private bool idFieldSpecified;

    private string keyField;

    private string valueField;

    /// <remarks/>
    public int Id
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IdSpecified
    {
        get
        {
            return this.idFieldSpecified;
        }
        set
        {
            this.idFieldSpecified = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string Key
    {
        get
        {
            return this.keyField;
        }
        set
        {
            this.keyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class GameScore
{

    private bool auxScoreAvailableField;

    private bool auxScoreAvailableFieldSpecified;

    private GameAuxScore[] gameAuxScoresField;

    private string datePlayedField;

    private string durationInMinField;

    private int scoreField;

    private bool scoreFieldSpecified;

    private int scoreIdField;

    private bool scoreIdFieldSpecified;

    /// <remarks/>
    public bool AuxScoreAvailable
    {
        get
        {
            return this.auxScoreAvailableField;
        }
        set
        {
            this.auxScoreAvailableField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AuxScoreAvailableSpecified
    {
        get
        {
            return this.auxScoreAvailableFieldSpecified;
        }
        set
        {
            this.auxScoreAvailableFieldSpecified = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    public GameAuxScore[] GameAuxScores
    {
        get
        {
            return this.gameAuxScoresField;
        }
        set
        {
            this.gameAuxScoresField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string datePlayed
    {
        get
        {
            return this.datePlayedField;
        }
        set
        {
            this.datePlayedField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string durationInMin
    {
        get
        {
            return this.durationInMinField;
        }
        set
        {
            this.durationInMinField = value;
        }
    }

    /// <remarks/>
    public int score
    {
        get
        {
            return this.scoreField;
        }
        set
        {
            this.scoreField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool scoreSpecified
    {
        get
        {
            return this.scoreFieldSpecified;
        }
        set
        {
            this.scoreFieldSpecified = value;
        }
    }

    /// <remarks/>
    public int scoreId
    {
        get
        {
            return this.scoreIdField;
        }
        set
        {
            this.scoreIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool scoreIdSpecified
    {
        get
        {
            return this.scoreIdFieldSpecified;
        }
        set
        {
            this.scoreIdFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class PatientGameScore
{

    private Game gameField;

    private GameScore[] gameScoreListField;

    private int levelField;

    private bool levelFieldSpecified;

    private int patientIdField;

    private bool patientIdFieldSpecified;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Game game
    {
        get
        {
            return this.gameField;
        }
        set
        {
            this.gameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    public GameScore[] gameScoreList
    {
        get
        {
            return this.gameScoreListField;
        }
        set
        {
            this.gameScoreListField = value;
        }
    }

    /// <remarks/>
    public int level
    {
        get
        {
            return this.levelField;
        }
        set
        {
            this.levelField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool levelSpecified
    {
        get
        {
            return this.levelFieldSpecified;
        }
        set
        {
            this.levelFieldSpecified = value;
        }
    }

    /// <remarks/>
    public int patientId
    {
        get
        {
            return this.patientIdField;
        }
        set
        {
            this.patientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patientIdSpecified
    {
        get
        {
            return this.patientIdFieldSpecified;
        }
        set
        {
            this.patientIdFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/EyeWebService.Models")]
public partial class Patient
{

    private string dobField;

    private string firstNameField;

    private string genderField;

    private string lastNameField;

    private int parentIdField;

    private bool parentIdFieldSpecified;

    private int patientIdField;

    private bool patientIdFieldSpecified;

    private int providerIdField;

    private bool providerIdFieldSpecified;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string dob
    {
        get
        {
            return this.dobField;
        }
        set
        {
            this.dobField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string firstName
    {
        get
        {
            return this.firstNameField;
        }
        set
        {
            this.firstNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string gender
    {
        get
        {
            return this.genderField;
        }
        set
        {
            this.genderField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string lastName
    {
        get
        {
            return this.lastNameField;
        }
        set
        {
            this.lastNameField = value;
        }
    }

    /// <remarks/>
    public int parentId
    {
        get
        {
            return this.parentIdField;
        }
        set
        {
            this.parentIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool parentIdSpecified
    {
        get
        {
            return this.parentIdFieldSpecified;
        }
        set
        {
            this.parentIdFieldSpecified = value;
        }
    }

    /// <remarks/>
    public int patientId
    {
        get
        {
            return this.patientIdField;
        }
        set
        {
            this.patientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patientIdSpecified
    {
        get
        {
            return this.patientIdFieldSpecified;
        }
        set
        {
            this.patientIdFieldSpecified = value;
        }
    }

    /// <remarks/>
    public int providerId
    {
        get
        {
            return this.providerIdField;
        }
        set
        {
            this.providerIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool providerIdSpecified
    {
        get
        {
            return this.providerIdFieldSpecified;
        }
        set
        {
            this.providerIdFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void SetProfileCompletedEventHandler(object sender, SetProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool SetProfileResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool SetProfileResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetUserIdCompletedEventHandler(object sender, GetUserIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int GetUserIdResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool GetUserIdResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetUserTypeIdCompletedEventHandler(object sender, GetUserTypeIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetUserTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int GetUserTypeIdResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool GetUserTypeIdResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListChildrenProfileCompletedEventHandler(object sender, ListChildrenProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListChildrenProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListChildrenProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Patient[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Patient[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetPatientProfileCompletedEventHandler(object sender, GetPatientProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPatientProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Patient Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Patient)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListAllProviderProfileCompletedEventHandler(object sender, ListAllProviderProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListAllProviderProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListAllProviderProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public user[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((user[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void SetChildProfileCompletedEventHandler(object sender, SetChildProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetChildProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetChildProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Patient Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Patient)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListPatientsProfileCompletedEventHandler(object sender, ListPatientsProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListPatientsProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListPatientsProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Patient[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Patient[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void DeleteProfileCompletedEventHandler(object sender, DeleteProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal DeleteProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool DeleteProfileResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool DeleteProfileResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetUserProfileCompletedEventHandler(object sender, GetUserProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public user Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((user)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetParentProfileCompletedEventHandler(object sender, GetParentProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetParentProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetParentProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public user Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((user)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void GetProviderProfileCompletedEventHandler(object sender, GetProviderProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProviderProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetProviderProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public user Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((user)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void CreateUpdateTherapyCompletedEventHandler(object sender, CreateUpdateTherapyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateUpdateTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal CreateUpdateTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool CreateUpdateTherapyResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool CreateUpdateTherapyResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void CreateUpdateGameCompletedEventHandler(object sender, CreateUpdateGameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateUpdateGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal CreateUpdateGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Game Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Game)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListAllTherapyCompletedEventHandler(object sender, ListAllTherapyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListAllTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListAllTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Therapy[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Therapy[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListAllGamesForTherapyCompletedEventHandler(object sender, ListAllGamesForTherapyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListAllGamesForTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListAllGamesForTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Game[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Game[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void DeleteGameCompletedEventHandler(object sender, DeleteGameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal DeleteGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool DeleteGameResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool DeleteGameResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void DeleteTherapyCompletedEventHandler(object sender, DeleteTherapyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal DeleteTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool DeleteTherapyResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool DeleteTherapyResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListGameScoresForPatientCompletedEventHandler(object sender, ListGameScoresForPatientCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListGameScoresForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListGameScoresForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public PatientGameScore Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((PatientGameScore)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void ListGameAssignmentCompletedEventHandler(object sender, ListGameAssignmentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListGameAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListGameAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public PatientGames Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((PatientGames)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void SetGameScoresForPatientCompletedEventHandler(object sender, SetGameScoresForPatientCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGameScoresForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGameScoresForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public PatientGameScore Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((PatientGameScore)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void SetGameAssignmentCompletedEventHandler(object sender, SetGameAssignmentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetGameAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SetGameAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool SetGameAssignmentResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool SetGameAssignmentResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
public delegate void DeleteGameAssignmentCompletedEventHandler(object sender, DeleteGameAssignmentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "0.0.0.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteGameAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal DeleteGameAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool DeleteGameAssignmentResult
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool DeleteGameAssignmentResultSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}
